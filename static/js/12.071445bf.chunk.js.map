{"version":3,"sources":["components/organism/Pagination.js"],"names":["StyleH4","styled","h4","StyleNav","nav","Pagination","useState","indexFirstNumberPagination","setIndexFirstNumberPagination","paginateContext","useContext","PaginateContext","fetchContext","FetchContext","validationContext","ValidationContext","paginate","searchPhotos","numbersPagination","totalNumberPhotos","value","handleClickArrow","event","typeArrow","parseInt","target","getAttribute","length","Math","ceil","type","onClick","className","slice","map","number","to","handleClickNumberPagination"],"mappings":"utBAOA,IAAMA,EAAUC,UAAOC,GAAV,KASPC,EAAWF,UAAOG,IAAV,KAuECC,UA/CI,WAAO,IAAD,EAE+CC,mBAAS,GAFxD,mBAEdC,EAFc,KAEcC,EAFd,KAIfC,EAAkBC,qBAAWC,KAC7BC,EAAeF,qBAAWG,KAC1BC,EAAoBJ,qBAAWK,KAC7BC,GAAaP,GAAmB,IAAhCO,SAPa,EAQ0CJ,GAAgB,GAAvEK,EARa,EAQbA,aAAcC,EARD,EAQCA,kBAAmBC,EARpB,EAQoBA,kBACjCC,GAAUN,GAAqB,IAA/BM,MAOFC,EAAmB,SAAAC,GACrB,IAAMC,EAAYC,SAASF,EAAMG,OAAOC,aAAa,UAElC,IAAfH,GAAoBhB,GAA8B,GAC/B,IAAdgB,GAAmBhB,GAA8BW,EAAkBS,OAAS,GAErFnB,EAA8BD,EAA6BgB,IAG/D,OACI,qCACI,eAACvB,EAAD,mCAA8B,4BAAI4B,KAAKC,KAAKV,EAAoB,SAChE,eAAChB,EAAD,WACI,mBACI2B,KAAK,KACLC,QAASV,EACTW,UAAS,WAAMd,EAAkBS,QAAU,OAAlC,YAA2E,IAA/BpB,GAAoC,OAAhF,0BAEb,6BACKW,EAAkBe,MAAM1B,EAA4BA,EAA6B,GAAG2B,KAAI,SAAAC,GAAM,OAAI,6BAAqB,cAAC,IAAD,CAASC,GAAG,QAAQL,QAAS,kBAxBjI,SAAAI,GAChCnB,EAASmB,GACTlB,EAAaG,EAAOe,GAsBmJE,CAA4BF,EAAS,IAAxE,SAA6EA,EAAS,KAAlGA,EAAS,QAEzH,mBACIL,KAAK,IACLC,QAASV,EACTW,UAAS,WAAMd,EAAkBS,QAAU,OAAlC,YAA4CpB,IAA+BqB,KAAKC,KAAKV,EAAoB,IAAM,GAAK,OAApH","file":"static/js/12.071445bf.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PaginateContext from '../../context/paginate/paginateContext';\r\nimport ValidationContext from '../../context/validationForm/validationContext';\r\nimport FetchContext from '../../context/fetch/fetchContext';\r\nimport styled from 'styled-components';\r\n\r\nconst StyleH4 = styled.h4`\r\ndisplay: flex;\r\njustify-content: center;\r\ncolor: white;\r\n&> p {\r\n    margin: 0 5px;\r\n}\r\n`;\r\n\r\nconst StyleNav = styled.nav`\r\ndisplay: flex;\r\njustify-content: space-around;\r\nalign-items: center;\r\nheight: 50px;\r\n\r\n& > i.none {\r\ndisplay: none;\r\n};\r\n& > i.grey {\r\nopacity: 0;\r\n};\r\n& > ul {\r\nwidth:80%;\r\npadding: 0;\r\ndisplay: flex;\r\njustify-content: space-between;\r\ntext-decoration: none;\r\n&> li {\r\n    list-style-type: none;\r\n};\r\n};\r\n`;\r\n\r\nconst Pagination = () => {\r\n\r\n    const [indexFirstNumberPagination, setIndexFirstNumberPagination] = useState(0);\r\n\r\n    const paginateContext = useContext(PaginateContext);\r\n    const fetchContext = useContext(FetchContext);\r\n    const validationContext = useContext(ValidationContext);\r\n    const { paginate } = paginateContext || {};\r\n    const { searchPhotos, numbersPagination, totalNumberPhotos } = fetchContext || {};\r\n    const { value } = validationContext || {};\r\n\r\n    const handleClickNumberPagination = number => {\r\n        paginate(number);\r\n        searchPhotos(value, number);\r\n    };\r\n\r\n    const handleClickArrow = event => {\r\n        const typeArrow = parseInt(event.target.getAttribute('type'))\r\n\r\n        if (typeArrow === -8 && indexFirstNumberPagination <= 1) return\r\n        else if (typeArrow === 8 && indexFirstNumberPagination >= numbersPagination.length - 8) return\r\n\r\n        setIndexFirstNumberPagination(indexFirstNumberPagination + typeArrow)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <StyleH4>A list of all pages: <p>{Math.ceil(totalNumberPhotos / 50)}</p></StyleH4>\r\n            <StyleNav>\r\n                <i\r\n                    type='-8'\r\n                    onClick={handleClickArrow}\r\n                    className={`${!numbersPagination.length && 'none'} ${indexFirstNumberPagination === 0 && 'grey'} fas fa-chevron-left`}>\r\n                </i>\r\n                <ul>\r\n                    {numbersPagination.slice(indexFirstNumberPagination, indexFirstNumberPagination + 8).map(number => <li key={number + 1}><NavLink to=\"/main\" onClick={() => handleClickNumberPagination(number + 1)}>{number + 1}</NavLink></li>)}\r\n                </ul>\r\n                <i\r\n                    type='8'\r\n                    onClick={handleClickArrow}\r\n                    className={`${!numbersPagination.length && 'none'} ${indexFirstNumberPagination === Math.ceil(totalNumberPhotos / 50) - 8 && 'grey'}  fas fa-chevron-right`}>\r\n                </i>\r\n            </StyleNav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pagination;"],"sourceRoot":""}