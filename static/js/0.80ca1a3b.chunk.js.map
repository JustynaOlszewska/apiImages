{"version":3,"sources":["styles/styleComponents/StyledFormPhoto.js","components/molecules/Form.js"],"names":["StyledForm","styled","div","StyledContainerInput","StyledInput","input","StyledIcon","i","StyledButton","button","props","theme","bg","StyledNavLink","NavLink","col","Form","history","useHistory","alertContext","useContext","AlertContext","fetchContext","FetchContext","validationContext","ValidationContext","setAlert","photosFilterDuplicate","setLoadingImages","searchPhotos","currentPage","value","setText","useEffect","length","showAlerts","name","defaultValue","list","type","onChange","e","valueInput","target","id","map","element","index","title","className","onClick","push","to"],"mappings":"s0CAKO,IAAMA,EAAaC,UAAOC,IAAV,KAaVC,EAAuBF,UAAOC,IAAV,KASpBE,EAAcH,UAAOI,MAAV,KAUXC,EAAaL,UAAOM,EAAV,KASVC,EAAeP,UAAOQ,OAAV,KAKH,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,MAG9BC,EAAgBZ,kBAAOa,IAAPb,CAAH,KAEf,SAAAS,GAAK,OAAIA,EAAMC,MAAMI,O,wBCIjBC,UArDF,SAAC,GAAe,IAAbL,EAAY,EAAZA,MACNM,EAAUC,cAEVC,EAAeC,qBAAWC,KAC1BC,EAAeF,qBAAWG,KAC1BC,EAAoBJ,qBAAWK,KAC7BC,GAAaP,GAAgB,IAA7BO,SANgB,EAOuDJ,GAAgB,GAAvFK,EAPgB,EAOhBA,sBAAuBC,EAPP,EAOOA,iBAAkBC,EAPzB,EAOyBA,aAAcC,EAPvC,EAOuCA,YAPvC,EAQGN,GAAqB,GAAxCO,EARgB,EAQhBA,MAAOC,EARS,EAQTA,QACfC,qBAAU,YACG,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,SAAU,GACjBL,EAAaE,EAAOD,KAGzB,CAACC,EAAOD,IAEX,IASMK,EAAa,YACdJ,GAASL,EAAS,yBAA0B,UAC3CC,EAAsBO,QAAUH,EAAMG,QAAWR,EAAS,YAAa,UAS7E,OACI,cAAC1B,EAAD,UACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAagC,KAAK,OAAOC,aAAa,GAAGC,KAAK,SAASC,KAAK,OACxDC,SAVK,SAAAC,GACjB,IAAMC,EAAaD,EAAEE,OAAOZ,MAC5BH,GAAiB,GACjBI,EAAQU,MAQA,0BAAUE,GAAG,SAAb,SACKjB,EAAsBkB,KAAI,SAACC,EAASC,GAAV,OAAoB,iCAA+BD,EAAQE,OAA1BF,EAAUC,QAE1E,cAACzC,EAAD,CAAY2C,UAAU,kBACtB,cAAC,gBAAD,CAAetC,MAAOA,EAAtB,SACI,cAACH,EAAD,CAAc+B,KAAK,SAASW,QA9BxB,WACZnB,EAAMG,QAAU,EAChBN,GAAiB,GACVG,EAAMG,OAAS,IACtBjB,EAAQkC,KAAK,KACbhB,MAyBQ,SAAkD,cAACtB,EAAD,CAAeuC,GAAG,QAAlB","file":"static/js/0.80ca1a3b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nexport const StyledForm = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n& > button {\r\n  background-color: rgba(255, 142, 83,0.5);\r\n& *{\r\n  color: #454441;\r\n  text-decoration: none;\r\n};\r\n};\r\n`;\r\n\r\nexport const StyledContainerInput = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 70px;\r\n  @media (min-width: 1279px), (min-height: 1000px)and (orientation: portrait) {\r\n    height: 120px;\r\n  };\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  position: absolute; \r\n  width: 98%; \r\n  height: 50%;\r\n  left: 50%; \r\n  transform: translateX(-50%);\r\n  top: 0;\r\n  text-indent: 7%;\r\n`;\r\n\r\nexport const StyledIcon = styled.i`\r\n  position: absolute;\r\n  top: 25%; \r\n  left: 3%;\r\n  transform: translateY(-25%);\r\n  color: black;\r\n  text-shadow: 0px 0px black;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  position: absolute;\r\n  bottom: 0; \r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background-color: ${props => props.theme.bg};\r\n`;\r\n\r\nexport const StyledNavLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: ${props => props.theme.col};\r\n`;","import React, { useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { StyledForm, StyledContainerInput, StyledInput, StyledIcon, StyledButton, StyledNavLink } from '../../styles/styleComponents/StyledFormPhoto';\r\nimport FetchContext from \"../../context/fetch/fetchContext\";\r\nimport AlertContext from \"../../context/alert/alertContext\";\r\nimport ValidationContext from \"../../context/validationForm/validationContext\";\r\nimport { ThemeProvider } from 'styled-components'\r\nconst Form = ({ theme }) => {\r\n    const history = useHistory();\r\n\r\n    const alertContext = useContext(AlertContext);\r\n    const fetchContext = useContext(FetchContext);\r\n    const validationContext = useContext(ValidationContext);\r\n    const { setAlert } = alertContext || {};\r\n    const { photosFilterDuplicate, setLoadingImages, searchPhotos, currentPage } = fetchContext || {};\r\n    const { value, setText } = validationContext || {};\r\n    useEffect(() => {\r\n        if (value?.length >= 3) {\r\n            searchPhotos(value, currentPage);\r\n        };\r\n        //eslint-disable-next-line\r\n    }, [value, currentPage]);\r\n\r\n    const handleClick = () => {\r\n        if (value.length >= 3) {\r\n            setLoadingImages(true)\r\n        } else if (value.length < 3) {\r\n            history.push(\"/\");\r\n            showAlerts();\r\n        };\r\n    };\r\n\r\n    const showAlerts = () => {\r\n        !value && setAlert('please enter something', 'light');\r\n        (!photosFilterDuplicate.length && value.length) && setAlert('no photos', 'light');\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const valueInput = e.target.value;\r\n        setLoadingImages(false);\r\n        setText(valueInput);\r\n    };\r\n\r\n    return (\r\n        <StyledForm>\r\n            <StyledContainerInput >\r\n                <StyledInput name=\"text\" defaultValue=\"\" list=\"photos\" type=\"text\"\r\n                    onChange={handleChange} />\r\n                <datalist id=\"photos\">\r\n                    {photosFilterDuplicate.map((element, index) => <option key={element + index}>{element.title}</option>)}\r\n                </datalist>\r\n                <StyledIcon className=\"fas fa-search\" />\r\n                <ThemeProvider theme={theme}>\r\n                    <StyledButton type=\"submit\" onClick={handleClick}><StyledNavLink to=\"/main\">Show me</StyledNavLink></StyledButton>\r\n                </ThemeProvider>\r\n            </StyledContainerInput>\r\n        </StyledForm>\r\n    );\r\n};\r\n\r\nexport default Form;"],"sourceRoot":""}