{"version":3,"sources":["context/types.ts","context/fetch/fetchReducer.js","context/fetch/FetchState.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/validationForm/validationReducer.js","context/validationForm/ValidationState.js","context/paginate/paginateReducer.js","context/paginate/PaginateState.js","App.tsx","context/fetch/fetchContext.js","context/alert/alertContext.js","context/validationForm/validationContext.js","context/paginate/paginateContext.js"],"names":["TypeTask","FetchReducer","state","action","type","CLEAR_PHOTO","photo","GET_RANDOM_PHOTO","loading","randomPhoto","payload","map","urls","GET_PHOTO","SEARCH_PHOTOS","photosFilterDuplicate","results","filter","item","index","self","findIndex","element","title","photos","totalNumberPhotos","total","numbersPagination","Array","Math","ceil","keys","ERROR","error","SET_LOADING","SET_LOADINGIMAGES","loadingImages","FetchState","props","useReducer","dispatch","getRandomPhoto","a","setLoading","axios","get","res","data","searchPhotos","text","pageNumber","perPageNumber","getPhoto","id","Provider","value","clearPhoto","setLoadingImages","bool","children","alertReducer","SET_ALERT","alert","REMOVE_ALERT","AlertState","AlertReducer","setAlert","msg","setTimeout","ValidationReducer","SET_TEXT","valueInput","ValidationState","setText","PaginateReducer","SET_PAGINATION","currentPage","paylad","SET_INDEX_FIRST_NUMBER","indexFirstNumberPagination","PaginateState","paginate","number","setIndexFirstNumberPagination","typeArrow","NotFound","lazy","HeaderSearch","Main","Modal","App","location","useLocation","background","exact","path","component","fetchContext","createContext","alertContext","validationContext","paginateContext"],"mappings":"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","file":"static/js/5.00ec8f4a.chunk.js","sourcesContent":["export enum TypeTask {\r\nGET_RANDOM_PHOTO = 'GET_RANDOM_PHOTO',\r\nSEARCH_PHOTOS = 'SEARCH_PHOTOS',\r\nGET_PHOTO = 'GET_PHOTO',\r\nCLEAR_PHOTO = 'CLEAR_PHOTO',\r\nERROR = 'ERROR',\r\nSET_LOADING = 'SET_LOADING',\r\nSET_LOADINGIMAGES = 'SET_LOADINGIMAGES',\r\nSET_PAGINATION = 'SET_PAGINATION',\r\nSET_INDEX_FIRST_NUMBER = 'SET_INDEX_FIRST_NUMBER',\r\nSET_TEXT = 'SET_TEXT',\r\nSET_INPUT = 'SET_INPUT',\r\nSET_ALERT = 'SET_ALERT',\r\nREMOVE_ALERT = 'REMOVE_ALERT',\r\n}\r\n","import { TypeTask } from \"../types\";\r\n\r\nconst FetchReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case TypeTask.CLEAR_PHOTO:\r\n            return {\r\n                ...state,\r\n                photo: []\r\n            }\r\n        case TypeTask.GET_RANDOM_PHOTO:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                randomPhoto: action.payload.map(({ urls }) => urls)\r\n            }\r\n        case TypeTask.GET_PHOTO:\r\n            return {\r\n                ...state,\r\n                photo: action.payload,\r\n                loading: false,\r\n            }\r\n\r\n        case TypeTask.SEARCH_PHOTOS:\r\n            return {\r\n                ...state,\r\n                photosFilterDuplicate: action.payload.results.filter((item, index, self) => self.findIndex(element => (element.title === item.title)) === index),\r\n                photos: action.payload.results,\r\n                totalNumberPhotos: action.payload.total,\r\n                loading: false,\r\n                numbersPagination: [...Array(Math.ceil(action.payload.total / 50)).keys()]\r\n            }\r\n\r\n        case TypeTask.ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case TypeTask.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case TypeTask.SET_LOADINGIMAGES:\r\n            return {\r\n                ...state,\r\n                loadingImages: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default FetchReducer;","import React, { useReducer } from 'react';\r\nimport FetchContext from \"./fetchContext\";\r\nimport FetchReducer from \"./fetchReducer\";\r\nimport axios from \"axios\";\r\nimport { TypeTask } from \"../types\"\r\n\r\nconst FetchState = props => {\r\n    const initialState = {\r\n        randomPhoto: null,\r\n        photosFilterDuplicate: [],\r\n        photos: [],\r\n        loading: false,\r\n        loadingImages: false,\r\n        photo: \"\",\r\n        numbersPagination: [],\r\n        totalNumberPhotos: null,\r\n        error: []\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(FetchReducer, initialState);\r\n\r\n    const getRandomPhoto = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await axios.get(`https://api.unsplash.com/photos/random?count=1&client_id=yhDIca96_nzfQlbE1tg2G5boMXKf7dYH6YXIV_EXHls`);\r\n            dispatch({\r\n                type: TypeTask.GET_RANDOM_PHOTO,\r\n                payload: res.data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: TypeTask.ERROR,\r\n                payload: error\r\n            })\r\n        }\r\n    };\r\n\r\n    const searchPhotos = async (text, pageNumber = 1, perPageNumber = 50) => {\r\n        try {\r\n            setLoading(true);\r\n            const res = await axios.get(`https://api.unsplash.com/search/collections?query=${text}&page=${pageNumber}&per_page=${perPageNumber}&client_id=yhDIca96_nzfQlbE1tg2G5boMXKf7dYH6YXIV_EXHls`)\r\n            dispatch({\r\n                type: TypeTask.SEARCH_PHOTOS,\r\n                payload: res.data\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: TypeTask.ERROR,\r\n                payload: error\r\n            })\r\n        }\r\n    };\r\n\r\n    const getPhoto = async (id) => {\r\n        try {\r\n            const res = await axios.get(`https://api.unsplash.com/collections/${id}?client_id=yhDIca96_nzfQlbE1tg2G5boMXKf7dYH6YXIV_EXHls`);\r\n            dispatch({\r\n                type: TypeTask.GET_PHOTO,\r\n                payload: res.data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: TypeTask.ERROR,\r\n                payload: error\r\n            })\r\n        }\r\n    };\r\n\r\n    const clearPhoto = () => {\r\n        dispatch({\r\n            type: TypeTask.CLEAR_PHOTO,\r\n        })\r\n    };\r\n\r\n    const setLoading = () => dispatch({ type: TypeTask.SET_LOADING });\r\n\r\n    const setLoadingImages = (bool) => dispatch({ type: TypeTask.SET_LOADINGIMAGES, payload: bool });\r\n\r\n    return <FetchContext.Provider value={{ error: state.error, randomPhoto: state.randomPhoto, numbersPagination: state.numbersPagination, totalNumberPhotos: state.totalNumberPhotos, photos: state.photos, photo: state.photo, photosFilterDuplicate: state.photosFilterDuplicate, loadingImages: state.loadingImages, loading: state.loading, getRandomPhoto, searchPhotos, getPhoto, clearPhoto, setLoadingImages }}> {props.children}</FetchContext.Provider>\r\n};\r\n\r\nexport default FetchState;","import { TypeTask } from \"../types\";\r\n\r\nconst alertReducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n        case TypeTask.SET_ALERT:\r\n            return {\r\n                alert: action.payload\r\n            }\r\n        case TypeTask.REMOVE_ALERT:\r\n            return null;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default alertReducer","import React, { useReducer } from 'react';\r\nimport AlertReducer from \"./alertReducer\";\r\nimport AlertContext from \"./alertContext\";\r\nimport { TypeTask } from \"../types\";\r\n\r\nconst AlertState = props => {\r\n    const initialState = null;\r\n\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState)\r\n\r\n    const setAlert = (msg, type) => {\r\n        dispatch({\r\n            type: TypeTask.SET_ALERT,\r\n            payload: { msg, type }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            return dispatch({ type: TypeTask.REMOVE_ALERT })\r\n        }, 5000);\r\n    };\r\n\r\n    return <AlertContext.Provider value={{ alert: state, setAlert }}>{props.children}</AlertContext.Provider>\r\n};\r\n\r\nexport default AlertState;\r\n","import { TypeTask } from \"../types\";\r\n\r\nconst ValidationReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case TypeTask.SET_TEXT:\r\n            return {\r\n                ...state,\r\n                value: action.payload,\r\n                valueInput: state.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default ValidationReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport ValidationReducer from \"./validationReducer\";\r\nimport ValidationContext from \"./validationContext\";\r\nimport { TypeTask } from \"../types\";\r\n\r\nconst ValidationState = props => {\r\n    const initialState = {\r\n        value: \"\",\r\n        valueInput: \"\"\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(ValidationReducer, initialState);\r\n\r\n    const setText = value => {\r\n            dispatch({\r\n                type: TypeTask.SET_TEXT,\r\n                payload: value\r\n            })\r\n    };\r\n\r\n    return <ValidationContext.Provider value={{ value: state.value, valueInput: state.valueInput, setText }}>{props.children}</ValidationContext.Provider>\r\n};\r\n\r\nexport default ValidationState;\r\n","import { TypeTask } from \"../types\";\r\n\r\nconst PaginateReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case TypeTask.SET_PAGINATION:\r\n            return {\r\n                ...state,\r\n                currentPage: action.paylad\r\n            }\r\n        case TypeTask.SET_INDEX_FIRST_NUMBER:\r\n            return {\r\n                ...state,\r\n                indexFirstNumberPagination: state.indexFirstNumberPagination + action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default PaginateReducer;\r\n","import React, { useReducer } from \"react\";\r\nimport PaginateReducer from \"./paginateReducer\";\r\nimport PaginateContext from \"./paginateContext\";\r\nimport { TypeTask } from \"../types\";\r\n\r\nconst PaginateState = props => {\r\n    const initialState = {\r\n        currentPage: 1,\r\n        indexFirstNumberPagination: 0,\r\n    };\r\n    const [state, dispatch] = useReducer(PaginateReducer, initialState);\r\n\r\n    const paginate = (number) => {\r\n        dispatch({\r\n            type: TypeTask.SET_PAGINATION,\r\n            payload: number\r\n        });\r\n    };\r\n\r\n    const setIndexFirstNumberPagination = (typeArrow) => {\r\n        dispatch({\r\n            type: TypeTask.SET_INDEX_FIRST_NUMBER,\r\n            payload: typeArrow\r\n        })\r\n    };\r\n\r\n    return <PaginateContext.Provider value={{ indexFirstNumberPagination: state.indexFirstNumberPagination, currentPage: state.currentPage, paginate, setIndexFirstNumberPagination }}>{props.children}</PaginateContext.Provider>\r\n}\r\n\r\nexport default PaginateState;","import React, { lazy } from 'react';\nimport {\n  Switch,\n  Route,\n  useLocation\n} from \"react-router-dom\";\nimport FetchState from \"./context/fetch/FetchState\";\nimport AlertState from \"./context/alert/AlertState\";\nimport ValidationState from \"./context/validationForm/ValidationState\";\nimport PaginateState from \"./context/paginate/PaginateState\";\nimport { Location } from \"./typesAppTS\";\nconst NotFound = lazy(() => import('./components/pages/notFound/NotFound'));\nconst HeaderSearch = lazy(() => import('./components/pages/headerSearch/HeaderSearch'));\nconst Main = lazy(() => import('./components/pages/Main/Main'));\nconst Modal = lazy(() => import('./components/pages/modal/Modal'));\n\nconst App: React.FC = () => {\n  const location: Location = useLocation();\n  const background = location.state && location.state.background;\n\n  return (\n    <div>\n      <FetchState>\n        <AlertState>\n          <ValidationState>\n            <PaginateState>\n              <Switch location={background || location}>\n                <Route exact path=\"/\" component={HeaderSearch} />\n                <Route path=\"/apiImages\" component={HeaderSearch} />\n                <Route path=\"/main\" component={Main} />\n                <Route component={NotFound} />\n              </Switch>\n              {background && <Route path=\"/photo/:id\" children={<Modal />} />}\n            </PaginateState>\n          </ValidationState>\n        </AlertState>\n      </FetchState>\n    </div>\n  );\n};\n\nexport default App;\n","import { createContext } from 'react';\r\nconst fetchContext = createContext();\r\nexport default fetchContext;","import { createContext } from \"react\";\r\nconst alertContext = createContext();\r\nexport default alertContext;","import { createContext } from \"react\"\r\nconst validationContext = createContext();\r\nexport default validationContext;","import { createContext } from \"react\";\r\nconst paginateContext = createContext();\r\nexport default paginateContext;"],"sourceRoot":""}